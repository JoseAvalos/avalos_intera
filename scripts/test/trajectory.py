import argparse
import rospy
import intera_interface
import intera_external_devices
from intera_interface import CHECK_VERSION
import time

from geometry_msgs.msg import (
    PoseStamped,
    Pose,
    Point,
    Quaternion,
)
from std_msgs.msg import Header
from sensor_msgs.msg import JointState
from intera_core_msgs.srv import (
    SolvePositionIK,
    SolvePositionIKRequest,
)


def set_j():
    rate = rospy.Rate(10) # hz
    limb = intera_interface.Limb('right')
    #limb.move_to_neutral()
    ik_service_client(0.680,0.300,0.040)
    time.sleep(3)
    print "Posicion neutral terminada"
    names=["right_j0","right_j1","right_j2","right_j3","right_j4","right_j5","right_j6"]
    p0=[-0.0497082,-0.0167676,0.00643394,0.0207698,0.0271133,0.0263377,0.0193163,0.00692238,-0.0099708,-0.0304899,-0.0537618,-0.078913,-0.10507,-0.13136,-0.15691,-0.180846,-0.202295,-0.220383,-0.234238,-0.242986,-0.245754,-0.242072,-0.233086,-0.220345,-0.205399,-0.189796,-0.175086,-0.162818,-0.154542,-0.151806,-0.156161,-0.168668,-0.18844,-0.214103,-0.244283,-0.277606,-0.312698,-0.348184,-0.38269,-0.414843,-0.443267,-0.46695,-0.486319,-0.502161,-0.515264,-0.526417,-0.536405,-0.546018,-0.556043,-0.567268,-0.580481,-0.596468,-0.616010,-0.63992,-0.66896,-0.703926,-0.745606,-0.794787,-0.852258,-0.918806,-0.995219]
    
    v0=[0.329405,0.232016,0.143359,0.063435,-0.00775596,-0.0702141,-0.123939,-0.168932,-0.205191,-0.232718,-0.251512,-0.261573,-0.262901,-0.255497,-0.239359,-0.214489,-0.180885,-0.138549,-0.0874801,-0.0276783,0.0368188,0.0898606,0.12741,0.149466,0.156029,0.1471,0.122677,0.0827621,0.027354,-0.0435469,-0.125068,-0.197721,-0.256631,-0.301801,-0.333229,-0.350915,-0.354861,-0.345064,-0.321527,-0.284247,-0.23683,-0.193687,-0.158421,-0.131032,-0.111521,-0.0998868,-0.0961301,-0.100251,-0.112249,-0.132124,-0.159876,-0.195506,-0.239013,-0.290398,-0.349659,-0.416798,-0.491815,-0.574708,-0.665479,-0.764128,-0.764128]
    
    a0=[-0.973896,-0.886567,-0.799239,-0.71191,-0.624582,-0.537253,-0.449924,-0.362596,-0.275267,-0.187939,-0.10061,-0.0132816,0.074047,0.161376,0.248704,0.336033,0.423361,0.51069,0.598018,0.644971,0.530419,0.37549,0.220562,0.0656333,-0.0892952,-0.244224,-0.399152,-0.55408,-0.709009,-0.815214,-0.726523,-0.589109,-0.451694,-0.31428,-0.176866,-0.0394516,0.0979628,0.235377,0.372791,0.474174,0.431433,0.35266,0.273886,0.195113,0.11634,0.0375673,-0.0412058,-0.119979,-0.198752,-0.277525,-0.356298,-0.435071,-0.513844,-0.592617,-0.67139,-0.750163,-0.828936,-0.90771,-0.986483,-0.986483,-0.986483]

    p1=[-0.445166,-0.485455,-0.5197,-0.548391,-0.572018,-0.591071,-0.606039,-0.617412,-0.62568,-0.631333,-0.634861,-0.636753,-0.637499,-0.637589,-0.637513,-0.637761,-0.638822,-0.641185,-0.645342,-0.651782,-0.660994,-0.673302,-0.688365,-0.705675,-0.724726,-0.745009,-0.766018,-0.787245,-0.808182,-0.828322,-0.847158,-0.86423,-0.879267,-0.892046,-0.902344,-0.909937,-0.914604,-0.91612,-0.914262,-0.908807,-0.899533,-0.886324,-0.869498,-0.849481,-0.8267,-0.80158,-0.774549,-0.746032,-0.716455,-0.686245,-0.655827,-0.625629,-0.596076,-0.567594,-0.54061,-0.51555,-0.49284,-0.472907,-0.456176,-0.443073,-0.434026]
    
    v1=[-0.402888,-0.342451,-0.286911,-0.23627,-0.190526,-0.14968,-0.113733,-0.0826827,-0.0565307,-0.0352766,-0.0189204,-0.00746206,-0.000901668,0.000760821,-0.00247459,-0.0106079,-0.0236391,-0.0415683,-0.0643953,-0.0921202,-0.123081,-0.15063,-0.173105,-0.190506,-0.202833,-0.210086,-0.212266,-0.209371,-0.201403,-0.18836,-0.170717,-0.15037,-0.12779,-0.10298,-0.0759375,-0.046664,-0.0151591,0.0185773,0.054545,0.0927442,0.132093,0.168261,0.200167,0.227812,0.251194,0.270314,0.285172,0.295768,0.302102,0.304173,0.301983,0.295531,0.284816,0.269839,0.250601,0.2271,0.199337,0.167312,0.131024,0.0904752,0.0904752]
    
    a1=[0.604373,0.555394,0.506415,0.457436,0.408457,0.359478,0.310499,0.26152,0.212541,0.163562,0.114583,0.0656039,0.0166249,-0.0323542,-0.0813332,-0.130312,-0.179291,-0.22827,-0.277249,-0.309609,-0.275489,-0.22475,-0.174011,-0.123271,-0.0725321,-0.0217929,0.0289464,0.0796856,0.130425,0.176427,0.203478,0.225793,0.248107,0.270421,0.292735,0.315049,0.337363,0.359678,0.381992,0.393483,0.361685,0.319064,0.276443,0.233822,0.191201,0.14858,0.105959,0.0633381,0.0207171,-0.0219039,-0.0645249,-0.107146,-0.149767,-0.192388,-0.235009,-0.27763,-0.320251,-0.362872,-0.405493,-0.405493,-0.405493]

    p2=[0.487343,0.417787,0.359815,0.312478,0.274826,0.245911,0.224784,0.210495,0.202095,0.198636,0.199168,0.202742,0.20841,0.215221,0.222228,0.22848,0.233029,0.234926,0.233222,0.226967,0.215213,0.197437,0.174824,0.148983,0.121526,0.0940633,0.0682058,0.0455641,0.027749,0.0163712,0.0130413,0.0188126,0.032508,0.052393,0.076733,0.103793,0.13184,0.159137,0.183952,0.204548,0.219192,0.226664,0.227806,0.223974,0.216523,0.206812,0.196196,0.186031,0.177673,0.172481,0.171809,0.177014,0.189452,0.210481,0.241456,0.283734,0.338671,0.407623,0.491948,0.593001,0.712138]
    
    v2=[-0.695558,-0.57972,-0.473372,-0.376516,-0.28915,-0.211274,-0.14289,-0.0839957,-0.0345924,0.0053202,0.0357422,0.0566734,0.068114,0.070064,0.0625233,0.0454919,0.0189698,-0.017043,-0.0625464,-0.11754,-0.177759,-0.226136,-0.258407,-0.27457,-0.274626,-0.258575,-0.226417,-0.178151,-0.113778,-0.0332986,0.0577129,0.136954,0.19885,0.2434,0.270604,0.280463,0.272976,0.248143,0.205965,0.146441,0.0747226,0.011417,-0.0383245,-0.0745019,-0.0971153,-0.106164,-0.10165,-0.0835706,-0.0519275,-0.0067203,0.052051,0.124386,0.210286,0.30975,0.422777,0.549369,0.689525,0.843245,1.01053,1.19138,1.19138]
    
    a2=[1.15838,1.06347,0.968566,0.87366,0.778753,0.683846,0.58894,0.494033,0.399126,0.30422,0.209313,0.114406,0.0194994,-0.0754073,-0.170314,-0.265221,-0.360127,-0.455034,-0.549941,-0.602184,-0.483776,-0.322704,-0.161632,-0.000560393,0.160511,0.321583,0.482655,0.643727,0.804798,0.910116,0.792414,0.618957,0.4455,0.272043,0.0985865,-0.0748703,-0.248327,-0.421784,-0.595241,-0.717181,-0.633056,-0.497415,-0.361774,-0.226133,-0.0904921,0.0451489,0.18079,0.316431,0.452072,0.587713,0.723354,0.858995,0.994636,1.13028,1.26592,1.40156,1.5372,1.67284,1.80848,1.80848,1.80848]

    p3=[1.23096,1.29803,1.36216,1.42318,1.48092,1.53521,1.58588,1.63276,1.67568,1.71448,1.74898,1.77901,1.80441,1.825,1.84062,1.85109,1.85625,1.85593,1.84995,1.83815,1.82036,1.79663,1.76794,1.73547,1.70041,1.66397,1.62732,1.59167,1.55821,1.52812,1.5026,1.48263,1.46828,1.45943,1.45593,1.45765,1.46445,1.47619,1.49275,1.51397,1.53973,1.56971,1.60279,1.6377,1.67315,1.70784,1.74051,1.76985,1.79457,1.81341,1.82505,1.82823,1.82164,1.80401,1.77404,1.73046,1.67196,1.59727,1.5051,1.39416,1.26316]
    
    v3=[0.670701,0.641292,0.610187,0.577388,0.542894,0.506704,0.46882,0.429241,0.387967,0.344998,0.300334,0.253975,0.205921,0.156172,0.104728,0.0515895,-0.00324426,-0.059773,-0.117997,-0.177915,-0.237259,-0.286948,-0.324711,-0.35055,-0.364463,-0.366451,-0.356515,-0.334653,-0.300866,-0.255154,-0.199732,-0.143459,-0.0885495,-0.035004,0.0171777,0.0679955,0.11745,0.16554,0.212266,0.257629,0.29971,0.330837,0.349092,0.354475,0.346985,0.326624,0.293391,0.247286,0.18831,0.116461,0.0317397,-0.0658532,-0.176318,-0.299655,-0.435864,-0.584944,-0.746897,-0.921722,-1.10942,-1.30999,-1.30999]
    
    a3=[-0.294094,-0.311043,-0.327993,-0.344942,-0.361892,-0.378842,-0.395791,-0.412741,-0.429691,-0.44664,-0.46359,-0.480539,-0.497489,-0.514439,-0.531388,-0.548338,-0.565287,-0.582237,-0.599187,-0.593436,-0.496886,-0.377635,-0.258385,-0.139134,-0.0198835,0.0993671,0.218618,0.337868,0.457119,0.554221,0.562731,0.549093,0.535455,0.521817,0.508179,0.494541,0.480903,0.467265,0.453627,0.420808,0.311269,0.182549,0.0538292,-0.0748905,-0.20361,-0.33233,-0.46105,-0.589769,-0.718489,-0.847209,-0.975929,-1.10465,-1.23337,-1.36209,-1.49081,-1.61953,-1.74825,-1.87697,-2.00569,-2.00569,-2.00569]


    p4=[-0.56339,-0.491822,-0.434895,-0.391277,-0.359638,-0.338647,-0.326973,-0.323284,-0.326251,-0.334543,-0.346827,-0.361775,-0.378053,-0.394333,-0.409283,-0.421572,-0.429868,-0.432843,-0.429163,-0.417499,-0.39652,-0.365501,-0.326147,-0.280768,-0.231674,-0.181176,-0.131584,-0.08521,-0.0443633,-0.0113547,0.0115052,0.0225657,0.0228154,0.0139027,-0.00252385,-0.0248158,-0.0513248,-0.0804023,-0.1104,-0.139669,-0.166561,-0.189816,-0.209727,-0.226972,-0.242233,-0.256189,-0.269522,-0.282911,-0.297036,-0.312578,-0.330218,-0.350635,-0.374509,-0.402521,-0.435352,-0.47368,-0.518188,-0.569555,-0.62846,-0.695586,-0.771611]
    
    v4=[0.715678,0.569273,0.436178,0.316391,0.209912,0.116743,0.0368823,-0.0296696,-0.0829126,-0.122847,-0.149473,-0.162789,-0.162797,-0.149496,-0.122887,-0.0829686,-0.0297415,0.0367944,0.116639,0.209792,0.310186,0.393542,0.453794,0.490939,0.50498,0.495914,0.463744,0.408468,0.330086,0.228599,0.110605,0.00249673,-0.0891267,-0.164266,-0.22292,-0.26509,-0.290775,-0.299976,-0.292692,-0.268923,-0.232551,-0.199101,-0.172453,-0.152608,-0.139566,-0.133326,-0.133889,-0.141255,-0.155423,-0.176394,-0.204167,-0.238744,-0.280123,-0.328304,-0.383289,-0.445076,-0.513665,-0.589057,-0.671252,-0.76025,-0.76025]
    
    a4=[-1.46405,-1.33096,-1.19787,-1.06478,-0.931694,-0.798606,-0.665519,-0.532431,-0.399343,-0.266255,-0.133168,-7.99441e-05,0.133008,0.266096,0.399183,0.532271,0.665359,0.798447,0.931534,1.00393,0.833567,0.602513,0.371458,0.140403,-0.0906518,-0.321707,-0.552761,-0.783816,-1.01487,-1.17994,-1.08108,-0.916234,-0.751389,-0.586543,-0.421698,-0.256852,-0.0920063,0.0728393,0.237685,0.363719,0.334504,0.266477,0.198451,0.130424,0.0623972,-0.00562951,-0.0736562,-0.141683,-0.20971,-0.277736,-0.345763,-0.41379,-0.481816,-0.549843,-0.61787,-0.685896,-0.753923,-0.82195,-0.889976,-0.889976,-0.889976]

    p5=[0.91,0.862531,0.815121,0.768189,0.722156,0.677442,0.634467,0.593652,0.555416,0.520181,0.488365,0.460391,0.436677,0.417644,0.403712,0.395302,0.392834,0.396728,0.407404,0.425283,0.450785,0.484025,0.523899,0.568998,0.617913,0.669234,0.721554,0.773462,0.82355,0.870408,0.912628,0.948976,0.978928,1.00213,1.01824,1.0269,1.02776,1.02047,1.00468,0.980052,0.946223,0.903247,0.852784,0.796894,0.737636,0.677072,0.617261,0.560263,0.508139,0.462949,0.426753,0.401611,0.389584,0.392731,0.413112,0.452789,0.51382,0.598267,0.70819,0.845648,1.0127]
    
    v5=[-0.474686,-0.474104,-0.469319,-0.460331,-0.447141,-0.429749,-0.408153,-0.382356,-0.352355,-0.318153,-0.279747,-0.237139,-0.190329,-0.139315,-0.0840997,-0.0246815,0.0389393,0.106763,0.178789,0.255017,0.332399,0.39874,0.450989,0.489148,0.513217,0.523194,0.519081,0.500877,0.468583,0.422198,0.363487,0.299511,0.232035,0.161059,0.086583,0.00860702,-0.072869,-0.157845,-0.246321,-0.338297,-0.429756,-0.504631,-0.558903,-0.592574,-0.605643,-0.59811,-0.569976,-0.521239,-0.451901,-0.361961,-0.251419,-0.120276,0.0314695,0.203817,0.396766,0.610316,0.844469,1.09922,1.37458,1.67054,1.67054]
    
    a5=[0.00582343,0.0478491,0.0898747,0.1319,0.173926,0.215952,0.257977,0.300003,0.342029,0.384054,0.42608,0.468106,0.510131,0.552157,0.594183,0.636208,0.678234,0.72026,0.762285,0.773822,0.663404,0.522497,0.38159,0.240683,0.0997759,-0.0411311,-0.182038,-0.322945,-0.463852,-0.587108,-0.639759,-0.67476,-0.70976,-0.74476,-0.77976,-0.81476,-0.849761,-0.884761,-0.919761,-0.914592,-0.748743,-0.542726,-0.336708,-0.13069,0.0753281,0.281346,0.487364,0.693382,0.8994,1.10542,1.31144,1.51745,1.72347,1.92949,2.13551,2.34152,2.54754,2.75356,2.95958,2.95958,2.95958]

    p6=[-2.42577,-2.46446,-2.49639,-2.52226,-2.54279,-2.55868,-2.57063,-2.57935,-2.58555,-2.58992,-2.59318,-2.59602,-2.59916,-2.6033,-2.60914,-2.6174,-2.62876,-2.64395,-2.66367,-2.68861,-2.71949,-2.75664,-2.79891,-2.8448,-2.89279,-2.94136,-2.989,-3.0342,-3.07544,-3.11121,-3.14,-3.16072,-3.174,-3.1809,-3.1825,-3.17984,-3.174,-3.16603,-3.157,-3.14797,-3.14,-3.13394,-3.1298,-3.12736,-3.1264,-3.12672,-3.1281,-3.13033,-3.1332,-3.13649,-3.14,-3.14351,-3.1468,-3.14967,-3.1519,-3.15328,-3.1536,-3.15264,-3.1502,-3.14606,-3.14]
    
    v6=[-0.386873,-0.319299,-0.258777,-0.205306,-0.158887,-0.119519,-0.0872025,-0.0619379,-0.0437248,-0.0325633,-0.0284533,-0.0313949,-0.0413881,-0.0584328,-0.0825292,-0.113677,-0.151876,-0.197127,-0.24943,-0.308784,-0.371491,-0.422757,-0.458884,-0.479871,-0.485718,-0.476426,-0.451994,-0.412422,-0.357711,-0.28786,-0.207164,-0.132797,-0.0690547,-0.0159357,0.0265595,0.0584309,0.0796785,0.0903023,0.0903023,0.0796785,0.0605556,0.0414328,0.0244347,0.00956141,-0.00318714,-0.0138109,-0.02231,-0.0286842,-0.0329338,-0.0350585,-0.0350585,-0.0329338,-0.0286842,-0.02231,-0.0138109,-0.00318714,0.00956141,0.0244347,0.0414328,0.0605556,0]
    
    a6=[0.67574,0.605225,0.534709,0.464193,0.393678,0.323162,0.252647,0.182131,0.111615,0.0410995,-0.0294161,-0.0999318,-0.170447,-0.240963,-0.311479,-0.381994,-0.45251,-0.523026,-0.593541,-0.627072,-0.512661,-0.361265,-0.209869,-0.0584728,0.0929232,0.244319,0.395715,0.547111,0.698507,0.806965,0.743666,0.637428,0.53119,0.424952,0.318714,0.212476,0.106238,4.44089e-14,-0.106238,-0.191228,-0.191228,-0.169981,-0.148733,-0.127486,-0.106238,-0.0849904,-0.0637428,-0.0424952,-0.0212476,0,0.0212476,0.0424952,0.0637428,0.0849904,0.106238,0.127486,0.148733,0.169981,0.191228,-0.605556,0]

    for n in range(1, 61):
        #limb.set_joint_trajectory(names, [p0[n],p1[n],p2[n],p3[n],p4[n],p5[n],p6[n]], [v0[n],v1[n],v2[n],v3[n],v4[n],v5[n],v6[n]], [a0[n],a1[n],a2[n],a3[n],a4[n],a5[n],a6[n]])
        joint_command={"right_j6": p6[n], "right_j5": p5[n], "right_j4": p4[n], "right_j3": p3[n], "right_j2": p2[n], "right_j1": p1[n], "right_j0": p0[n]}  
        limb.move_to_joint_positions(joint_command)
        rate.sleep()
        print n 



    return True


def ik_service_client(_x,_y,_z):
    _limb = intera_interface.Limb('right')
    ns = "ExternalTools/right/PositionKinematicsNode/IKService"
    iksvc = rospy.ServiceProxy(ns, SolvePositionIK)
    ikreq = SolvePositionIKRequest()
    hdr = Header(stamp=rospy.Time.now(), frame_id='base')
    poses = {
        'right': PoseStamped(
            header=hdr,
            pose=Pose(
                position=Point(
                    x=_x,
                    y=_y,
                    z=_z,
                ),
                orientation=Quaternion(
                    x=0.707,
                    y=0.707,
                    z=0.001,
                    w=0.001,
                ),
            ),
        ),
    }
    # Add desired pose for inverse kinematics
    ikreq.pose_stamp.append(poses["right"])
    # Request inverse kinematics from base to "right_hand" link
    ikreq.tip_names.append('right_hand')


    try:
        rospy.wait_for_service(ns, 5.0)
        resp = iksvc(ikreq)
    except (rospy.ServiceException, rospy.ROSException), e:
        rospy.logerr("Service call failed: %s" % (e,))
        return False

    # Check if result valid, and type of seed ultimately used to get solution
    if (resp.result_type[0] > 0):
        # Format solution into Limb API-compatible dictionary
        limb_joints = dict(zip(resp.joints[0].name, resp.joints[0].position))
        rospy.loginfo("Solucion IK ok:\n")
        print limb_joints
        _limb.move_to_joint_positions(limb_joints)
        return True
    else:
        rospy.logerr("INVALID POSE - No Valid Joint Solution Found.")
        rospy.logerr("Result Error %d", resp.result_type[0])
        return False

    
def main():

    print("Initializing node... ")
    rospy.init_node("sdk_joint_position_keyboard")
    print("Getting robot state... ")
    rs = intera_interface.RobotEnable(CHECK_VERSION)
    print rs.version_check()
    init_state = rs.state().enabled
    rate = rospy.Rate(100) # hz

    rospy.loginfo("Enabling robot...")
    rs.enable()

    set_j()
    
    print("Done.")


if __name__ == '__main__':
    main()
